/bin/find /var/www/soa-systems_densignoff02/ -type f -name \*.log\* -mtime +30 -delete

45 23 * * * /bin/find  /var/www/soa-systems_densignoff02/asset/output/work/Assets/phoenix-master* -mtime +2 -delete
40 23 * * * /bin/find  /var/www/soa-systems_densignoff02/asset/output/work/Assets/engage-master* -mtime +2 -delete

55 23 * * * /bin/find /var/www/soa-systems_denprod/*/output/logs/  -type f -name \*.log\* -mtime +60 -delete
59 23 * * * /bin/find /var/www/soa-systems_denprod/ -type f -name  \*.log\* -mtime +2 -exec gzip {} \;



+++++++
[root@den-signoff02 ~]# cat /var/www/disk_clean_cron_scripts_by_NOPS/Remove-classifierindexer-release02.sh 
#!/bin/bash -p
#clear
echo "`date` : -----------------------------------"
soa_systems_path="/var/www/soa-systems_densignoff02/classifier/output/work/Indices"
keep_file_count="3"
grep_var1="classifier_Indices"
grep_var2="releases"
delete_file_count="0"
typeset -i Total_files_count=0

#echo "delete_file_count = $delete_file_count"
for i in `ls -1 $soa_systems_path |grep -v "grep"|grep "201"`
do
echo
Total_files_count=`ls -1tr $soa_systems_path |grep "201"|wc -l`
echo "Total number of files in $soa_systems_path = $Total_files_count"
echo
#ls -1tr $soa_systems_path$i/*/* |grep "$grep_var1"
#du -sh $soa_systems_path$i/*/* |grep "$grep_var1"
#echo "Total files count for $i $grep_var1 = $Total_files_count"

#echo -e "\nHow many files you want to remove ?"
#read -p "Enter an integer value = " delete_file_count
delete_file_count=$(($Total_files_count - 2))

echo -e "\nNumber of files to be deleted are : $delete_file_count , And the list is \n"
if [ "$Total_files_count" -gt "${delete_file_count}" ]
then
echo ""
#echo "The delete_file_count $delete_file_count gt 2"
else
delete_file_count="0"
exit 0
fi
echo "delete_file_count=$delete_file_count"

echo "soa_systems_path : $soa_systems_path"
for j in `ls -1tr $soa_systems_path  |grep "201"|head -0$delete_file_count`
 do
echo "Removing following file..."

#echo "delete_file_count value in j loop = $delete_file_count"
# echo -e "This file is in j loop start"
#rm -v $j
#echo " running j loop"
#ls -1d $soa_systems_path/$j
rm -rf $soa_systems_path/$j
 #echo -e "This line is in j loop end"
 done

echo
echo -e "\n--------------------------------"
#echo "delte_cile_cont valude =$delete_file_count"
delete_file_count="0"
#echo "Now delte_file_count value reset to = $delete_file_count"
done

[root@den-signoff02 ~]# 



++++
crontab -l
[root@den-prod-web05 ~]# crontab -l
# HEADER: This file was autogenerated at 2016-02-01 19:23:22 +0000 by puppet.
# HEADER: While it can still be managed manually, it is definitely not recommended.
# HEADER: Note particularly that the comments starting with 'Puppet Name' should
# HEADER: not be deleted, as doing so could cause duplicate cron jobs.
# Puppet Name: pe-mcollective-metadata
0,15,30,45 * * * * /opt/puppet/sbin/refresh-mcollective-metadata
*/1 * * * * /etc/http_connections.sh > /dev/null 2>&1
*/1 * * * * /etc/rails.connections.sh > /dev/null 2>&1
###RFC-2792###
###***WEB***
55 23 * * * /bin/find /var/www/ventana_denprod/ ! -name start.log ! -name stop.log ! -name restart.log -type f -name \*.log\* -mtime +60 -delete
15 00 * * * /bin/find /var/log/httpd -type f -mtime +5 -exec gzip {} \;
# Chef Name: apgar-cronjob
* * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH nice apgar-probe | logger -t apgar
# Chef Name: motd-update-cronjob
45 * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH /usr/local/bin/update-motd | logger -t update-motd
# Chef Name: firewalld-update-cronjob
*/5 * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH /usr/local/bin/update-firewalld | logger -t update-firewalld
# Chef Name: hosts-file-update-cronjob
*/5 * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH /usr/local/bin/update-hosts-file | logger -t update-hosts-file
# Chef Name: clamav-cronjob
30 1 * * * PATH=$PATH:/usr/sbin:/usr/local/sbin:/usr/local/bin RANDOM_DELAY=14400 clh-clamav-cronjob > /var/log/cron.log 2>&1
# Chef Name: resolv-file-update-cronjob
*/5 * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH /usr/local/bin/update-resolv-file | logger -t update-resolv-file
# Chef Name: resolv-file-update-cronjob-reboot
@reboot PATH=/usr/local/bin:/usr/local/sbin:$PATH /usr/local/bin/update-resolv-file | logger -t update-resolv-file
# Chef Name: run-chef-client-wrapper
15,30,45,0 * * * * PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin RANDOM_DELAY=300 nice chef-run-wrapper | logger -t chef
# Chef Name: write-chef-failcount
25,40,55,10 * * * * PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin nice clh-write-chef-stats-to-statsd | logger -t chef
# Chef Name: update-haproxy-file-cronjob
*/5 * * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH RANDOM_DELAY=600 /usr/local/bin/update-haproxy-file | logger -t update-haproxy-file
# Chef Name: yum-cronjob
13 4 * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH clh-yum-cronjob | logger -t yum
# Chef Name: update-apgar-test-results
5 * * * * RANDOM_DELAY=3500 clh-update-apgar-test-results
# Chef Name: update-apgar-ohai-data
35 * * * * RANDOM_DELAY=3500 clh-update-apgar-ohai-data
# Chef Name: ensure-desired-chef-client-version
05 04 * * * PATH=/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin RANDOM_DELAY=600 /etc/chef-prerequisites.d/00-chef-client-install | logger -t chef-client
# Chef Name: rebuild-rpm-database
15 7 * * * PATH=/usr/local/bin:/usr/local/sbin:$PATH clh-rebuild-rpm-database --destroy-rpm-database | logger -t rebuild-rpm-database
[root@den-prod-web05 ~]# 
